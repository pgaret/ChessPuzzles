continue
Puzzle.find(id: params[:id]).update(JSON.parse(params["data"]))
JSON.parse(params["data"])
params["data"]
Puzzle.find(id: params[:id]).update(params["data"])
Puzzle.find(_id: params[:id]).update(params["data"])
params["data"]
Puzzle.find(id: params[:id])
Puzzle.find(_id: params[:id])
params[:id]
continue
step
continue
board
continue
Puzzle.where(played_times: puzzle["played_times"], rating: puzzle["rating"], pieces: puzzle["pieces"], cols: puzzle["cols"], rows: puzzle["rows"], past_moves_board: puzzle["past_moves_board"]).count
Puzzle.where(played_times: puzzle["played_times"], rating: puzzle["rating"], pieces: puzzle["pieces"], cols: puzzle["cols"], rows: puzzle["rows"], past_moves_board: puzzle["past_moves_board"])
Puzzle.where(rows: puzzle["rows"]).count
puzzle["rows"]
Puzzle.where(rows: 8, cols: 8).count
Puzzle.where(rows: 8).count
Puzzle.where(rows: 8)
Puzzle.where(played_times: puzzle["played_times"], rating: puzzle["rating"], pieces: puzzle["pieces"], cols: puzzle["cols"], rows: puzzle["rows"], past_moves_board: puzzle["past_moves_board"])
Puzzle.where(played_times: puzzle["played_times"], rating: puzzle["rating"], pieces: puzzle["pieces"], cols: puzzle["cols"], rows: puzzle["rows"], past_moves_board: puzzle["past_moves_board"]))
Puzzle.exists(rating: puzzle["rating"])
Puzzle.exists(rows: puzzle["rows"])
Puzzle.only('puzzle_no', 'rating', 'played_times').all.to_json
puzzle
clear
Puzzle.only('puzzle_no', 'rating', 'played_times').all.to_json
Puzzle.all.to_json
Puzzle.where()
Puzzle.find()
puzzle
Puzzle.exists(played_times: puzzle["played_times"], rating: puzzle["rating"], pieces: puzzle["pieces"], cols: puzzle["cols"], rows: puzzle["rows"], past_moves_board: puzzle["past_moves_board"])
Puzzle.exists(played_times: puzzle["played_times"], rating: puzzle["rating"], pieces: puzzle["pieces"], cols: puzzle["cols"], rows: puzzle["rows"], past_moves_board: puzzle["past_moves_board"]).next()
Puzzle.exists(played_times: puzzle["played_times"], rating: puzzle["rating"], pieces: puzzle["pieces"], cols: puzzle["cols"], rows: puzzle["rows"], past_moves_board: puzzle["past_moves_board"])
puzzle
step
puzzle
continue
Puzzle.exists(JSON.parse(params["data"]))
JSON.parse(params["data"])
params["data"]
exit
Puzzle.find_or_create_by(JSON.parse(params["data"]))
continue
Puzzle.find_or_create_by(JSON.parse(params["data"]))
JSON.parse(params["data"])
params["data"]
params
params["data"]["Puzzle_No"]
params["data"]["ind"]
params["data"]
JSON.parse(params)
params
continue
params
continue
params
exit
